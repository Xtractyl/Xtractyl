import json
import os
import requests
from dotenv import load_dotenv, set_key, dotenv_values


load_dotenv()
LABEL_STUDIO_URL = os.getenv("LABEL_STUDIO_URL", "http://labelstudio:8080")
API_TOKEN = os.getenv("LABEL_STUDIO_API_TOKEN")

PROJECT_NAME = "xtractyl_autogenerated_project"
LABEL_CONFIG_TEMPLATE = """
<View>
    <View style="padding: 0 1em; margin: 1em 0; background: #f1f1f1; position: sticky; top: 0; border-radius: 3px; z-index:100">
  <Labels name="label" toName="html">
    {labels}
  </Labels>
      </View>
  <HyperText name="html" value="$html"  granularity="symbol" />
</View>
"""


# 1. Lade Fragen + Labels
with open("questions_and_labels.json", "r", encoding="utf-8") as f:
    qa = json.load(f)

questions = qa["questions"]
labels = qa["labels"]

# 2. Baue XML-Label-Konfiguration
label_tags = "\n    ".join([f'<Label value="{label}"/>' for label in labels])
label_config = LABEL_CONFIG_TEMPLATE.format(labels=label_tags)

# 3. Erstelle das Projekt via API
headers = {
    "Authorization": f"Token {API_TOKEN}",
    "Content-Type": "application/json"
}

payload = {
    "title": PROJECT_NAME,
    "label_config": label_config
}

response = requests.post(
    f"{LABEL_STUDIO_URL}/api/projects",
    headers=headers,
    json=payload
)

if response.status_code != 201:
    print("‚ùå Fehler beim Erstellen des Projekts:", response.text)
    exit(1)

project_id = response.json()["id"]
print(f"‚úÖ Projekt {PROJECT_NAME} erstellt mit ID {project_id}")

# 4. Speichere PROJECT_ID in .env
env_path = ".env"
print(f"üîç Writing to .env at: {os.path.abspath(env_path)}")
# Nach dem Setzen:
set_key(env_path, "LABEL_STUDIO_PROJECT_ID", str(project_id), quote_mode="never")
print(f"üìÅ .env erfolgreich aktualisiert: LABEL_STUDIO_PROJECT_ID = {project_id}")
# Neu laden, z.‚ÄØB. f√ºr Folgeoperationen im gleichen Skript
config = dotenv_values(env_path)
project_id = int(config["LABEL_STUDIO_PROJECT_ID"])

# 5. Verkn√ºpfe ML Backend mit Projekt
ml_backend_url = os.getenv("ML_BACKEND_URL", "http://ml_backend:6789")

ml_payload = {
    "url": ml_backend_url,
    "title": "xtractyl-backend",
    "project": project_id
}

ml_response = requests.post(
    f"{LABEL_STUDIO_URL}/api/ml",
    headers=headers,
    json=ml_payload
)

if ml_response.status_code != 201:
    print("‚ö†Ô∏è ML Backend konnte nicht verbunden werden:", ml_response.text)
else:
    print("‚úÖ ML Backend erfolgreich zugewiesen.")